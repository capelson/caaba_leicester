->>- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ {>CASE:REM}

! ----------------------------------------------------------------------------
! This file contains necessary consts and expressions to be included into
! equation file of the MECCA chemistry module tagged by imtag
! to process kinetic isotope effects
!
! [Gromov, MPICH, 2007-2018]
! ----------------------------------------------------------------------------

-<<- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ {<CASE:REM}
#INLINE F90_GLOBAL
  !
  ! ----- declaration part -----
  !
  !
  ! O3 formation rate (should be identical to the regular mechanism)
    real(dp) :: cio_kozf
  !
  ! O3P<->O2 exchange rates (direct and rel. to O3 formation)
    real(dp) :: cio_kiex, cio_kiex_r_kozf
  !
  ! clumped O2 D36 and D35 T-dep. equilibrium values fit
    real(dp) :: cio_D36_eq_fit, cio_D35_eq_fit
  !
#ENDINLINE {above lines go into MODULE messy_mecca_kpp_Global}

#INLINE F90_RCONST
  !
  ! ----- calculation part -----
  !
  ! O3 formation rate (should be identical to the regular mechanism)
  ! <G1001>  O2   + O3P {+M} = O3  : {%UpStTrG} 6.E-34{ยง1.1}*((temp/300.)**(-2.4))*cair ; {&2626}
  ! cio_kozf = tag_G1001
    cio_kozf = 6.0e-34*((temp/300.)**(-2.4))  ! should be without cair
  !
  ! O3P<->O2 exchange rates
  ! rates from [1997.IJCK29.Wiegell,etal]
  ! direct
    cio_kiex = 2.66e-12*((temp/300.)**(-0.88))
  ! relative to O3 formation
    cio_kiex_r_kozf = 4.67e+21*((temp/300.)**(1.74)) * cio_kozf
  !
  ! clumped O2 equilibrium D36 and D35 values [2004.GCA68.Wang,etal] fit
  ! see master in 2004.GCA68.Wang,etal-Fig.5a.xlsx
    cio_D36_eq_fit = 1e-3*(25.65*exp(-temp/44.69)+ 9.62*exp(-temp/159.64))
    cio_D35_eq_fit = 1e-3*( 5.47*exp(-temp/154.4)+14.75*exp(-temp/40.00))
  !
#ifdef CIO_IEXINIT
    if (C(ind_CIOIEXINIT).gt.0) then
     ! non-zero ind_CIO_IEXINIT indicates that we should re-initialise
      C(ind_D36O2)  = C(ind_O2)*cio_D36_eq_fit!!(temp)
      C(ind_D36rO2) = C(ind_O2)*cio_D36_eq_fit!!(temp)
      C(ind_D35O2)  = C(ind_O2)*cio_D35_eq_fit!!(temp)
      C(ind_D35rO2) = C(ind_O2)*cio_D35_eq_fit!!(temp)
    endif
#endif
#ifdef DISABLEMEFORDEBUG
  print *,'----- CIO EQ. FIT VALUES (per mille) -----'
  print *,' temp: ',temp
  print *,'  D36: ',cio_D36_eq_fit!!(temp)
  print *,'  D35: ',cio_D35_eq_fit!!(temp)
#endif
#ENDINLINE

!!#INLINE F90_RATES
!!  ! clumped O2 equilibrium D36 and D35 values [2004.GCA68.Wang,etal] fit
!!  ! see master in 2004.GCA68.Wang,etal-Fig.5a.xlsx
!!  !
!!  elemental real(dp) function cio_D36_eq_fit(eqt)
!!    cio_D36_eq_fit = 1e-3*(25.65*exp(-eqt/44.69)+ 9.62*exp(-eqt/159.64))
!!  end function cio_D36_eq_fit
!!  elemental real(dp) function cio_D35_eq_fit(eqt)
!!    cio_D35_eq_fit = 1e-3*( 5.47*exp(-eqt/154.4)+14.75*exp(-eqt/40.00))
!!  end function cio_D35_eq_fit
!!  !
!!#ENDINLINE
