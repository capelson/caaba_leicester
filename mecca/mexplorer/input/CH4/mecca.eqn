{created automatically by xmecca, DO NOT EDIT!}
#SETFIX CO2; O2; N2;
{default values}
{SETFIX of liquid H2O_a* is done in mecca.spc via xmecca}
#INLINE F90_GLOBAL
  ! MECCA info from xmecca:
  CHARACTER(LEN=*), PUBLIC, PARAMETER :: &
    timestamp            = 'xmecca was run on 2020-09-20 at 14:57:20 by sander on machine chlorine', &
    batchfile            = 'CH4', &
    gas_spc_file         = '-rw-r--r-- 1 sander sander 90513 Sep 19 21:38 gas.spc', &
    aqueous_spc_file     = '-rw-r--r-- 1 sander sander 10517 Sep 19 21:38 aqueous.spc', &
    gas_eqn_file         = '-rw-r--r-- 1 sander sander 320122 Sep 19 21:38 gas.eqn', &
    aqueous_eqn_file     = '-rw-r--r-- 1 sander sander 61362 Sep 19 21:38 aqueous.eqn', &
    gas_spc_file_sum     = '26595    89', &
    aqueous_spc_file_sum = '43424    11', &
    gas_eqn_file_sum     = '55954   313', &
    aqueous_eqn_file_sum = '55518    60', &
    rplfile              = '', &
    wanted               = 'Tr && G && !C && !S && !Cl && !Br && !I && !Hg', &
    diagtracfile         = '', &
    rxnrates             = 'y', &
    tag                  = 'n'
  LOGICAL, PARAMETER :: REQ_MCFCT = .FALSE.
#ENDINLINE {above lines go to messy_mecca_kpp_global}
#INLINE F90_GLOBAL
  ! from xmecca for aerosol:
  INTEGER, PARAMETER, PUBLIC :: APN = 1
  ! from aerosol.awk:
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_O2_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_O3_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_OH_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HO2_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_H2O_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_H2O2_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_NH3_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_NO_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_NO2_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_NO3_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HONO_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HNO3_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HNO4_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CH3OH_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HCOOH_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HCHO_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CH3O2_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CH3OOH_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CO2_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CH3CO2H_a   = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_PAN_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CH3CHO_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CH3COCH3_a  = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Cl_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Cl2_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HCl_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HOCl_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Br_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Br2_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HBr_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HOBr_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_BrCl_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_I2_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_IO_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HOI_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_ICl_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_IBr_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_SO2_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_H2SO4_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_DMS_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_DMSO_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Hg_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HgO_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HgOHOH_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HgOHCl_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HgCl2_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HgBr2_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HgSO3_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_ClHgBr_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_BrHgOBr_a   = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_ClHgOBr_a   = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeOH3_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeCl3_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeF3_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_O2m_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_OHm_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HO2m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_O2mm_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Hp_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_NH4p_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_NO2m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_NO3m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_NO4m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CO3m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HCOOm_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HCO3m_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CH3COOm_a   = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Clm_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Cl2m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_ClOm_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_ClOHm_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Brm_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Br2m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_BrOm_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_BrOHm_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_BrCl2m_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Br2Clm_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Im_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_IO2m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_IO3m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_ICl2m_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_IBr2m_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_SO3m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_SO3mm_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_SO4m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_SO4mm_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_SO5m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HSO3m_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HSO4m_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HSO5m_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CH3SO3m_a   = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CH2OHSO3m_a = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Hgp_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Hgpp_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HgOHp_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HgClp_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HgBrp_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HgSO32mm_a  = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Fepp_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeOpp_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeOHp_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeOH2p_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeClp_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Feppp_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeHOpp_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeHO2pp_a   = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeOHpp_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeOH4m_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeOHHO2p_a  = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeClpp_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeCl2p_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeBrpp_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeBr2p_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeFpp_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeF2p_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeSO3p_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeSO4p_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeSO42m_a   = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeOH2Fepppp_a = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_D1O_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Nap_a       = 0
#ENDINLINE {above lines go to messy_mecca_kpp_global}
#INLINE F90_UTIL
! from xmecca:
SUBROUTINE initialize_indexarrays
  USE messy_mecca_kpp_global     ! ind_XYZ_a(:) arrays
  USE messy_mecca_kpp_parameters ! ind_XYZ_a## scalars
  IMPLICIT NONE
END SUBROUTINE initialize_indexarrays
#ENDINLINE {above lines go to messy_mecca_kpp_util}
{***** START: gas-phase chemistry from gas.eqn *****}
#INLINE F90_GLOBAL
  ! variable declarations from gas.eqn:
  ! --------------------------------------------------------------------------
  ! inorganic and C1 chemistry:
  REAL :: k_HO2_HO2, k_NO3_NO2, k_NO2_HO2, k_HNO3_OH, k_CH3OOH_OH, &
          k_CH3CO2H_OH, k_ClO_ClO, k_BrO_NO2, k_I_NO2, k_DMS_OH, k_CH2OO_SO2
  REAL :: k_O3s ! used in some *.rpl files
  ! new methane chemistry:
  REAL :: beta_null_CH3NO3, beta_inf_CH3NO3, beta_CH3NO3, &
          k_NO2_CH3O2, k_CH2OO_NO2, beta_C2H5NO3, k_C6H5O2_NO2
  ! NO2+OH from Amedro et al., ref3491:
  REAL :: k_NO2_OH, alpha_HOONO, k_NO2_OH_lpl, k_NO2_OH_hpl, k_NO2_OH_logF
  ! --------------------------------------------------------------------------
  ! only for mim1, see mim1.rpl:
  REAL :: k_PrO2_HO2, k_PrO2_NO, k_PrO2_CH3O2
  REAL :: k0_NO_HO2, k1d_NO_HO2, k1w_NO_HO2, k2d_NO_HO2, k2w_NO_HO2, &
          alpha_NO_HO2, beta_NO_HO2, f_BrO_CH3O2
  ! end of mim1 block
  ! --------------------------------------------------------------------------
  ! organic chemistry (MIM, MAM, MOM...):
  REAL :: k_CH3CO3_NO2, k_PAN_M
  REAL(dp) :: KRO2NO, KAPHO2, KAPNO, KRO2NO3, KNO3AL, KDEC
  ! maximum number of C atoms the rate coefficients are calculated for:
  REAL :: k_hsb, k_hsd, k_16hs, k_16hsz14, k_16hsz41, k_15hsdhb, k_14hsal, &
          k_15hs24vynal, k_15hs42vynal, k_hydec
  REAL :: j_IC3H7NO3, j_ACETOL, j_HPALD, j_ketene
  REAL(dp) :: RO2      ! sum of peroxy radicals
  REAL(dp) :: k_CH3O2   ! CH3O2 self-reaction
  REAL(dp) :: k_RO2RCO3, k_RO2pRO2, k_RO2sRO2, k_RO2tRO2, &
              k_RO2pORO2, k_RO2sORO2, k_RO2tORO2, &
              k_RO2LISOPACO2, k_RO2ISOPBO2, k_RO2ISOPDO2
  REAL(dp) :: k_CH2CHOH_OH_HCOOH, k_CH2CHOH_OH_ALD, k_CH2CHOH_HCOOH, k_ALD_HCOOH
  REAL(dp) :: k1_RO2RCO3, k1_RO2pRO2, k1_RO2sRO2, k1_RO2tRO2, &
              k1_RO2pORO2, k1_RO2sORO2, k1_RO2tORO2, &
              k1_RO2LISOPACO2, k1_RO2ISOPBO2, k1_RO2ISOPDO2
  REAL(dp), PARAMETER :: k_C6H5O_NO2  = 2.08E-12 ! ref3172
  REAL(dp), PARAMETER :: k_C6H5O_O3   = 2.86E-13 ! ref3171
  ! SAR for OH reactions (ref3030 with introduction of temperature dependency)
  ! parameters for the SAR on H-abstraction OH:
  REAL(dp) :: k_p, k_s, k_t, k_ROHRO, k_CO2H, k_ROOHRO
  REAL(dp), PARAMETER :: &
    f_sOH = 3.44, f_tOH = 2.68, &
    f_sOOH = 8.,  f_tOOH = 8., &
    f_ONO2 = 0.04 , f_CH2ONO2 = 0.2, &
    f_cpan= 0.25, f_allyl = 3.6, f_alk= 1.23, &
    f_CHO = 0.55, f_CO2H = 1.67, f_CO = 0.73, &
    f_O = 8.15, f_pCH2OH = 1.29, f_tCH2OH = 0.53
  ! parameters for the SAR on OH-addtion to alkenes
  ! Note for ach2ooh calculated
  ! assuming RO2 distribution in ref3159
  ! B, E, D, F, AC are 0.41, 0.02, 0.22, 0.05, 0.30 respectively
  REAL(dp) :: k_adp, k_ads, k_adt
  REAL(dp), PARAMETER :: &
    k_adsecprim = 3.0E-11, k_adtertprim = 5.7E-11 &
   , a_PAN = 0.56      , a_CHO = 0.31   , a_COCH3 = 0.76 &
   , a_CH2ONO2 = 0.64  , a_CH2OH = 1.7  , a_CH2OOH = 1.7 &
   , a_COH = 2.2       , a_COOH = 2.2   , a_CO2H = 0.25
  ! Branching ratios for RO2 + HO2 reactions
  ! CH3CO3 + HO2 has unique branching ratios (see reaction)
  ! beta-hydroxy acyl peroxy radicals, e.g. HOCH2CO3
  ! (Groß, PhD Thesis, ref3195)
  REAL(dp), PARAMETER :: r_CO3_OH  = 0.69, r_CO3_O3  = 0.10, r_CO3_OOH = 0.21
  ! beta-keto peroxy radicals equal or bigger than CH3COCHO2CH3 (Dillon and Crowley, ref3192)
  REAL(dp), PARAMETER :: r_COCH2O2_OH  = 0.15, r_COCH2O2_OOH = 0.85
  REAL(dp), PARAMETER :: r_CHOHCH2O2_OH = 0.10 ! derived from Liu ref3193 for ISOPBO2 and ISOPDO2. Consistent with exp. data by C. Groß (MPIC)
  REAL(dp), PARAMETER :: r_CH2OCH2O2_OH  = 0.4 ! ref3175 for CH3OCH2O2
  REAL(dp), PARAMETER :: r_BIPERO2_OH = 0.40 ! ref3188 for toluene
  REAL(dp), PARAMETER :: f_HPAL = 0.5 ! HPALD-yield after 1,6-H-shift
  ! --------------------------------------------------------------------------
  ! Parameters included for acid-base equilibria calculation
  ! used to enable the double use of the aqueous.eqn for liquid
  ! and aerosol phase.
  REAL(dp), PARAMETER :: &
    f_equil_HO2   = 1.e5_dp, f_equil_HONO   = 1.e5_dp, &
    f_equil_HNO3  = 1.e7_dp, f_equil_HNO4   = 1.e5_dp, &
    f_equil_HCOOH = 1.e5_dp, f_equil_SO2    = 1.e9_dp, &
    f_equil_HSO3m = 1.e9_dp, f_equil_HSO4m  = 1.e7_dp, &
    f_equil_NH3   = 1.e7_dp, f_equil_H2O    = 1.e9_dp, &
    f_equil_CO2   = 1.e5_dp, f_equil_HCl    = 1.e2_dp, &
    f_equil_HBr   = 1.e6_dp,                           &
    f_equil_HOCl  = 1.e2_dp, f_equil_HOBr   = 1.e2_dp, &
    f_equil_ICl   = 1.e2_dp, f_equil_IBr    = 1.e2_dp, &
    f_equil_IClBr = 1.e2_dp, f_equil_H2SO4  = 1.e7_dp
#ENDINLINE {above lines go to messy_mecca_kpp_global}
#INLINE F90_RCONST
  ! start of executable statements
  ! define some rate constants here if the expressions are too long
  ! for kpp or if they are used more than once
  ! --------------------------------------------------------------------------
  ! inorganic and C1 chemistry:
  k_HO2_HO2    = (3.0E-13*EXP(460./temp)+2.1E-33*EXP(920./temp)*cair)* &
                 (1.+1.4E-21*EXP(2200./temp)*C(ind_H2O))
  k_NO3_NO2    = k_3rd(temp,cair,2.4E-30,3.0,1.6E-12,-0.1,0.6)
  k_NO2_HO2    = k_3rd(temp,cair,1.9E-31,3.4,4.0E-12,0.3,0.6)
  k_HNO3_OH    = 1.32E-14*EXP(527./temp) + 1./ & ! "All data" in Tab. 1 of ref3325
                 ( 1./(7.39E-32*EXP(453./temp)*cair) + &
                 1./(9.73E-17*EXP(1910./temp)) ) ! 15 % ref3325, p. 2389
  k_CH3OOH_OH  = 5.3E-12*EXP(190./temp)
  k_CH3CO2H_OH = 4.0E-14*EXP(850./temp)
  k_ClO_ClO    = k_3rd(temp,cair,1.9E-32,3.6,3.7E-12,1.6,0.6)
  k_BrO_NO2    = k_3rd_iupac(temp,cair,4.7E-31,3.1,1.8E-11,0.0,0.4)
  ! JPL: k_BrO_NO2   = k_3rd(temp,cair,5.2E-31,3.2,6.9E-12,2.9,0.6)
  k_I_NO2      = k_3rd_iupac(temp,cair,3.0E-31,1.0,6.6E-11,0.0,0.63)
  ! for numerical reasons, the expression is multiplied by 1e30/1e30
  k_DMS_OH     = 1.E-9*EXP(5820./temp)*C(ind_O2)/ &
                 (1.E30+5.*EXP(6280./temp)*C(ind_O2))
  k_CH2OO_SO2  = 3.66E-11 ! average of 3.9E-11 + 3.42E-11
  k_O3s = (1.7E-12*EXP(-940./temp)) * C(ind_OH) &  ! <G2104>
        + (1.E-14*EXP(-490./temp)) * C(ind_HO2) &  ! <G2107>
        + jx(ip_O1D) * 2.2E-10 * C(ind_H2O) &      !
        / ( 3.2E-11*EXP(70./temp)*C(ind_O2)   &
           + 1.8E-11*EXP(110./temp)*C(ind_N2) &
           + 2.2E-10*C(ind_H2O) )
  ! new methane chemistry:
  ! branching ratio for methyl nitrate according to Butkovskaya et al.,
  ! (ref3177) but reduced according to Flocke et al. (ref3164)
  ! fit of data according to Lindemann-Hinshelwood scheme by J. Crowley
  ! http://iupac.pole-ether.fr/datasheets/pdf/ROO_1_CH3O2_NO.pdf
  beta_null_CH3NO3 = 0.00295 + 5.15E-22*cair*(temp/298)**(7.4)
  beta_inf_CH3NO3  = 0.022
  beta_CH3NO3      = (beta_null_CH3NO3 * beta_inf_CH3NO3) /&
                     (beta_null_CH3NO3 + beta_inf_CH3NO3) / 10.
  k_NO2_CH3O2      = k_3rd(temp,cair,1.0E-30,4.8,7.2E-12,2.1,0.6)
  k_C6H5O2_NO2     = k_NO2_CH3O2 ! Consistent with ref3167 that set 1E-12 as lower limit at 298 K and 1 bar.
  k_CH2OO_NO2          = 4.25E-12 ! average of 7.E-12 and 1.5E-12
  ! branching ratio for ethylnitrate formation according to Butkovskaya ref3170
  ! ratio transformed from beta = k1b/k1a to beta_C2H5NO3 = (1-(1+beta)^(-1))
  beta_C2H5NO3    = (1-1/(1+1.E-2*(3.88e-3*cair/2.46e19*760.+.365)*(1+1500.*(1/temp -1/298.))))
  ! --------------------------------------------------------------------------
  ! only for mim1, see mim1.rpl:
  ! op_kg_20110805+ for HO2 + NO -> HNO3 (butkovskaya_*.rpl)
  alpha_NO_HO2 = C(ind_H2O)*6.6E-27*temp*EXP(3700./temp)
  beta_NO_HO2  = MAX(((530./temp)+(press*4.8004E-6)-1.73)*0.01,0._dp)
  k0_NO_HO2    = 3.5E-12*EXP(250./temp)
  ! without humidity correction
  k2d_NO_HO2   = (beta_NO_HO2*k0_NO_HO2)/(1.+beta_NO_HO2)
  k1d_NO_HO2   = k0_NO_HO2 - k2d_NO_HO2
  ! with humidity correction
  k2w_NO_HO2   = (beta_NO_HO2*k0_NO_HO2*(1.+42.*alpha_NO_HO2))/ &
                 ((1.+alpha_NO_HO2)*(1.+beta_NO_HO2))
  k1w_NO_HO2   = k0_NO_HO2 - k2w_NO_HO2
  ! op_kg_20110805-
  k_PrO2_HO2   = 1.9E-13*EXP(1300./temp)
  k_PrO2_NO    = 2.7E-12*EXP(360./temp)
  k_PrO2_CH3O2 = 9.46E-14*EXP(431./temp)
  f_BrO_CH3O2 = 0.8/1.1 ! 0.8+/-0.2
  ! end of mim1 block
  ! --------------------------------------------------------------------------
  ! NO2 + OH:
  ! branching ratio:
  alpha_HOONO = ((3.3E-20*(temp/300.)**(-4.4))*cair * 0.29) / &
                ((3.3E-20*(temp/300.)**(-4.4))*cair + 0.29) * &
                10**(LOG10(0.39)/(1+(LOG10((3.3E-20*(temp/300.)**(-4.4)) &
                *cair/0.29)/(0.75-1.27*LOG10(0.39)))**(2.0)))+0.035
  ! low-pressure limit:
  k_NO2_OH_lpl = C(ind_N2)  *  2.6E-30*(temp/300.)**(-3.6) + &
                 C(ind_O2)  *  2.0E-30*(temp/300.)**(-3.6) + &
                 C(ind_H2O) * 15.9E-30*(temp/300.)**(-3.4)
  ! high-pressure limit:
  k_NO2_OH_hpl = 6.3E-11
  ! broadening factor:
  k_NO2_OH_logF = log10(0.39) / &
                  (1.+(log10(k_NO2_OH_lpl/k_NO2_OH_hpl)/(0.75-1.27*log10(0.39)))**2)
  ! rate constant:
  k_NO2_OH = ((k_NO2_OH_lpl*k_NO2_OH_hpl) / (k_NO2_OH_lpl+k_NO2_OH_hpl)) * &
             10.**(k_NO2_OH_logF)
  ! --------------------------------------------------------------------------
  k_CH3CO3_NO2 = k_3rd(temp,cair,9.7E-29,5.6,9.3E-12,1.5,0.6)
  k_PAN_M      = k_CH3CO3_NO2/(9.0E-29*EXP(14000./temp))
  ! rate coefficients from the MCM:
  KDEC    = 1.E6 ! moved here from parameters to avoid renaming to k_dec 
                 ! required by medina parser for parameters
  KRO2NO  = 2.54E-12*EXP(360./temp)
  KAPNO   = 8.10E-12*EXP(270./temp)  ! CH3CO3 + NO
  KRO2NO3 = 2.30E-12 ! ref2419
  KNO3AL  = 1.4E-12*EXP(-1900./temp)
  ! updated rate constant for the RCO3+HO2 reactions
  ! (Groß, PhD Thesis, ref3195)
  ! except CH3CO3+HO2 that is taken from Groß ref3156
  KAPHO2  = 5.20E-13*EXP(980./temp)*1.865 ! at 298K k(hoch2co3 + ho2) = 2.6( - 0.4)E-11 scaled with IUPAC T-dependent expression
  ! Rate constants for the permutation reaction formalism
  ! calculated as in the permutation reaction formalism of MCM
  ! k_RO2 = 2.*(KRO2self*k_CH3O2)^0.5
  ! k_RO2self are taken from IUPAC recommendations unless noted otherwise
  k_CH3O2     = 1.03E-13*EXP(365./temp) ! CH3O2 + CH3O2 (IUPAC)
  ! Acyl peroxy radicals
  k_RO2RCO3   = 2.*2.E-12*EXP(500./temp) ! K17 for the CH3CO3 + CH3O2 reaction directly taken from ref. 1759. Old MCM value 1.00E-11 at 298 K.
  ! Alkyl radicals (unsubstituted, > C3)
  k_RO2pRO2   = 2.*(1.E-12*k_CH3O2)**(.5)                      ! Model compound (CH3)2CHCH2O2 (isobutyl, ref3210). Old MCM value 1.30E-12 at 298 K.
  k_RO2sRO2   = 2.*(1.6E-12*EXP(-2200./temp)*k_CH3O2)**(.5)! Model compound i-C3H7O2 (ref3175). Old MCM value 2.50E-13 at 298 K.
  k_RO2tRO2   = 2.*3.8E-13*EXP(-1430./temp)                ! Model reaction t-C4H9O2 + CH3O2. Old MCM value 6.70E-15 at 298 K.
  ! Alkyl radical with either O or Cl in beta
  k_RO2pORO2  = 2.*7.5E-13*EXP(500./temp)                      ! Model reaction CH3COCH2O2 + CH3O2 (ref3175). Old MCM value 2.00E-12
  k_RO2sORO2  = 2.*(7.7E-15*EXP(1330./temp)*k_CH3O2)**(.5) ! Model compound CH3CH(OH)CH(O2)CH3 (ref3175). Old MCM value 8.80E-13 at 298 K.
  k_RO2tORO2  = 2.*(4.7E-13*EXP(-1420./temp)*k_CH3O2)**(.5)    ! Model compound (CH3)2C(OH)CO2(CH3)2 (ref3175). Old MCM value 9.20E-14 at 298 K.
  ! Allyl- and beta-hydroxy alkyl radicals
  k_RO2LISOPACO2 = 2.*((2.8E-12+3.9E-12)/2.*k_CH3O2)**(.5)  ! Model compound ISOPAO2 and ISOPCO2. Old MCM value 2.0E-12 at 298 K. K15 average from MCM ref. 2419
  k_RO2ISOPBO2   = 2.*(6.9E-14*k_CH3O2)**(.5)                  ! Model compound ISOPBO2. Old MCM value 8.0E-13 at 298 K. K15 from MCM ref. 2419
  k_RO2ISOPDO2   = 2.*(4.8E-12*k_CH3O2)**(.5)                  ! Model compound ISOPDO2. Old MCM value 8.0E-13 at 298 K. K15 from MCM ref. 2419
  ! T-dependent H-abstraction group rate constants
  k_p          = 4.49E-18*temp*temp*EXP(-320./temp) ! Kwok and Atkinson, ref3194
  k_s          = 4.50E-18*temp*temp*EXP(253./temp)  ! Kwok and Atkinson, ref3194
  k_t          = 2.12E-18*temp*temp*EXP(696./temp)  ! Kwok and Atkinson, ref3194
  k_ROHRO      = 2.1E-18*temp*temp*EXP(-85./temp)   ! Kwok and Atkinson, ref3194
  k_ROOHRO     = 0.6*k_CH3OOH_OH
  k_CO2H       = 0.7*k_CH3CO2H_OH
  ! T-dependent OH-addition rate constants
  k_adp        = 4.5E-12*(temp/300.)**(-0.85)                        ! 1/2 k(OH + C2H4), high pressure limit IUPAC as in Peeters et al. 2007
  k_ads        = 0.25*(1.1E-11*EXP(485./temp)+1.0E-11*EXP(553./temp)) ! 1/2 * k_av(OH + cis/trans 2-butene) as in Peeters et al. 2007
  k_adt        = 1.922E-11*EXP(450./temp) - k_ads                    ! k(OH + 2-methyl-2-butene) - k_ads
  k_hsb         = 1.52E11*EXP(-9512./temp)*1. ! 1,5-H-shift Peeters et al(2009) 0.003533 s-1 at 303K
  k_hsd         = 6.08E10*EXP(-8893./temp)*1. ! 1,5-H-shift Peeters et al(2009) 0.0109 s-1 at 303K
  ! 1,6-H-shift for ZISOPAO2 and ZISOPCO2
  k_16hsz14     = 2.28E9 * exp(-6764/temp) * 0.28 ! 0.07035 s-1 at 295K ! as in SI Taraborrelli et al., Nat. Geosc. 2012
  k_16hsz41     = 1.23E9 * exp(-6186/temp) * 0.28 ! 0.2692 s-1 at 295K
  k_16hs        = (k_16hsz14*k_16hsz41)**(.5)
  k_15hsdhb     = 5.                             ! 1,5-H-shift assisted by double H-bonding after Peeters and Müller(2010)
  ! 1,4-H-shift involving an aldehydic hydrogen
  k_14hsal = 2.9E7*exp(-5297/temp) ! Crounse ref3331 barrier 19 kcal/mol => ~ 0.5 s-1 at 295K
  !k_14hsal      = 2.9E7*exp(-1*(5297+705)/temp) ! CCSD(T)/aug-Schartz4(DT)//M05-2X/6-311G(d,p)) yields a barrier of 20.39 (L. Vereecken 2013) => ~ 0.04 s-1 at 295K
  k_15hs24vynal = k_16hsz14 * exp(-3500/(1.987*temp)) ! adding 3.5 kcal to the barrier of 1,6-H-shift as from SAR by L. Vereecken
  k_15hs42vynal = k_16hsz41 * exp(-3500/(1.987*temp))
  k_hydec       = 6.e14*exp(-16000./(1.98588*temp)) ! in cal Ea from Nguyen et al(2009) A from Baulch et al(2005)
  ! Rate constants for the formic acid production via vinyl alcohol. Also used for some bigger and saturated aldehydes.
  k_CH2CHOH_OH_HCOOH = 4.3E-11 ! ref3179
  k_CH2CHOH_OH_ALD   = 2.4E-11 ! ref3179
  k_CH2CHOH_HCOOH    = 4.67E-26*(temp)**(3.286)*EXP(4509./(1.987*temp)) ! ref3162
  k_ALD_HCOOH        = 1.17E-19*(temp)**(1.209)*EXP(-556./(1.987*temp)) ! ref3162
  j_IC3H7NO3   = 3.7*jx(ip_PAN)
  j_ACETOL     = 0.65*0.11*jx(ip_CHOH)
  j_HPALD      = (jx(ip_CH3OOH)+ jx(ip_MACR)/(2.*1.95E-3)) ! mcm.leeds.ac.uk/MCM/parameters/photolysis.htt
  j_ketene     = jx(ip_MVK)/0.004
  RO2 = 0.
  IF (ind_LISOPACO2>0)            RO2 = RO2 + C(ind_LISOPACO2)
  IF (ind_LDISOPACO2>0)           RO2 = RO2 + C(ind_LDISOPACO2)
  IF (ind_ISOPBO2>0)              RO2 = RO2 + C(ind_ISOPBO2)
  IF (ind_ISOPDO2>0)              RO2 = RO2 + C(ind_ISOPDO2)
  IF (ind_LISOPEFO2>0)            RO2 = RO2 + C(ind_LISOPEFO2)
  IF (ind_NISOPO2>0)              RO2 = RO2 + C(ind_NISOPO2)
  IF (ind_LHC4ACCO3>0)            RO2 = RO2 + C(ind_LHC4ACCO3)
  IF (ind_LC578O2>0)              RO2 = RO2 + C(ind_LC578O2)
  IF (ind_C59O2>0)                RO2 = RO2 + C(ind_C59O2)
  IF (ind_LNISO3>0)               RO2 = RO2 + C(ind_LNISO3)
  IF (ind_CH3O2>0)                RO2 = RO2 + C(ind_CH3O2)
  IF (ind_HOCH2O2>0)              RO2 = RO2 + C(ind_HOCH2O2)
  IF (ind_CH3CO3>0)               RO2 = RO2 + C(ind_CH3CO3)
  IF (ind_C2H5O2>0)               RO2 = RO2 + C(ind_C2H5O2)
  IF (ind_HOCH2CO3>0)             RO2 = RO2 + C(ind_HOCH2CO3)
  IF (ind_HYPROPO2>0)             RO2 = RO2 + C(ind_HYPROPO2)
  IF (ind_LBUT1ENO2>0)            RO2 = RO2 + C(ind_LBUT1ENO2)
  IF (ind_BUT2OLO2>0)             RO2 = RO2 + C(ind_BUT2OLO2)
  IF (ind_HCOCO3>0)               RO2 = RO2 + C(ind_HCOCO3)
  IF (ind_CO2H3CO3>0)             RO2 = RO2 + C(ind_CO2H3CO3)
  IF (ind_LHMVKABO2>0)            RO2 = RO2 + C(ind_LHMVKABO2)
  IF (ind_MACO3>0)                RO2 = RO2 + C(ind_MACO3)
  IF (ind_MACRO2>0)               RO2 = RO2 + C(ind_MACRO2)
  IF (ind_PRONO3BO2>0)            RO2 = RO2 + C(ind_PRONO3BO2)
  IF (ind_HOCH2CH2O2>0)           RO2 = RO2 + C(ind_HOCH2CH2O2)
  IF (ind_CH3COCH2O2>0)           RO2 = RO2 + C(ind_CH3COCH2O2)
  IF (ind_IC3H7O2>0)              RO2 = RO2 + C(ind_IC3H7O2)
  IF (ind_NC3H7O2>0)              RO2 = RO2 + C(ind_NC3H7O2)
  IF (ind_LC4H9O2>0)              RO2 = RO2 + C(ind_LC4H9O2)
  IF (ind_TC4H9O2>0)              RO2 = RO2 + C(ind_TC4H9O2)
  IF (ind_LMEKO2>0)               RO2 = RO2 + C(ind_LMEKO2)
  IF (ind_HCOCH2O2>0)             RO2 = RO2 + C(ind_HCOCH2O2)
  IF (ind_EZCH3CO2CHCHO>0)        RO2 = RO2 + C(ind_EZCH3CO2CHCHO)
  IF (ind_EZCHOCCH3CHO2>0)        RO2 = RO2 + C(ind_EZCHOCCH3CHO2)
  IF (ind_CH3COCHO2CHO>0)         RO2 = RO2 + C(ind_CH3COCHO2CHO)
  IF (ind_HCOCO2CH3CHO>0)         RO2 = RO2 + C(ind_HCOCO2CH3CHO)
  IF (ind_C1ODC3O2C4OOH>0)        RO2 = RO2 + C(ind_C1ODC3O2C4OOH)
  IF (ind_C1OOHC2O2C4OD>0)        RO2 = RO2 + C(ind_C1OOHC2O2C4OD)
  IF (ind_C1ODC2O2C4OD>0)         RO2 = RO2 + C(ind_C1ODC2O2C4OD)
  IF (ind_ISOPBDNO3O2>0)          RO2 = RO2 + C(ind_ISOPBDNO3O2)
  IF (ind_LISOPACNO3O2>0)         RO2 = RO2 + C(ind_LISOPACNO3O2)
  IF (ind_DB1O2>0)                RO2 = RO2 + C(ind_DB1O2)
  IF (ind_DB2O2>0)                RO2 = RO2 + C(ind_DB2O2)
  IF (ind_LME3FURANO2>0)          RO2 = RO2 + C(ind_LME3FURANO2)
  IF (ind_NO3CH2CO3>0)            RO2 = RO2 + C(ind_NO3CH2CO3)
  IF (ind_CH3COCO3>0)             RO2 = RO2 + C(ind_CH3COCO3)
  IF (ind_LZCO3C23DBCOD>0)        RO2 = RO2 + C(ind_LZCO3C23DBCOD)
  IF (ind_IBUTOLBO2>0)            RO2 = RO2 + C(ind_IBUTOLBO2)
  IF (ind_IPRCO3>0)               RO2 = RO2 + C(ind_IPRCO3)
  IF (ind_IC4H9O2>0)              RO2 = RO2 + C(ind_IC4H9O2)
  ! MBO-related
  IF (ind_LMBOABO2>0)             RO2 = RO2 + C(ind_LMBOABO2)
  IF (ind_IPRHOCO3>0)             RO2 = RO2 + C(ind_IPRHOCO3)
  IF (ind_LNMBOABO2>0)            RO2 = RO2 + C(ind_LNMBOABO2)
  IF (ind_NC4OHCO3>0)             RO2 = RO2 + C(ind_NC4OHCO3)
  ! APINENE-related:
  IF (ind_LAPINABO2>0)            RO2 = RO2 + C(ind_LAPINABO2)
  IF (ind_C96O2>0)                RO2 = RO2 + C(ind_C96O2)
  IF (ind_C97O2>0)                RO2 = RO2 + C(ind_C97O2)
  IF (ind_C98O2>0)                RO2 = RO2 + C(ind_C98O2)
  IF (ind_C85O2>0)                RO2 = RO2 + C(ind_C85O2)
  IF (ind_C86O2>0)                RO2 = RO2 + C(ind_C86O2)
  IF (ind_PINALO2>0)              RO2 = RO2 + C(ind_PINALO2)
  IF (ind_C96CO3>0)               RO2 = RO2 + C(ind_C96CO3)
  IF (ind_C89CO3>0)               RO2 = RO2 + C(ind_C89CO3)
  IF (ind_C85CO3>0)               RO2 = RO2 + C(ind_C85CO3)
  IF (ind_OHMENTHEN6ONEO2>0)      RO2 = RO2 + C(ind_OHMENTHEN6ONEO2)
  IF (ind_C511O2>0)               RO2 = RO2 + C(ind_C511O2)
  IF (ind_C106O2>0)               RO2 = RO2 + C(ind_C106O2)
  IF (ind_CO235C6CO3>0)           RO2 = RO2 + C(ind_CO235C6CO3)
  IF (ind_CHOC3COCO3>0)           RO2 = RO2 + C(ind_CHOC3COCO3)
  IF (ind_CO235C6O2>0)            RO2 = RO2 + C(ind_CO235C6O2)
  IF (ind_C716O2>0)               RO2 = RO2 + C(ind_C716O2)
  IF (ind_C614O2>0)               RO2 = RO2 + C(ind_C614O2)
  IF (ind_HCOCH2CO3>0)            RO2 = RO2 + C(ind_HCOCH2CO3)
  IF (ind_BIACETO2>0)             RO2 = RO2 + C(ind_BIACETO2)
  IF (ind_CO23C4CO3>0)            RO2 = RO2 + C(ind_CO23C4CO3)
  IF (ind_C109O2>0)               RO2 = RO2 + C(ind_C109O2)
  IF (ind_C811CO3>0)              RO2 = RO2 + C(ind_C811CO3)
  IF (ind_C89O2>0)                RO2 = RO2 + C(ind_C89O2)
  IF (ind_C812O2>0)               RO2 = RO2 + C(ind_C812O2)
  IF (ind_C813O2>0)               RO2 = RO2 + C(ind_C813O2)
  IF (ind_C721CO3>0)              RO2 = RO2 + C(ind_C721CO3)
  IF (ind_C721O2>0)               RO2 = RO2 + C(ind_C721O2)
  IF (ind_C722O2>0)               RO2 = RO2 + C(ind_C722O2)
  IF (ind_C44O2>0)                RO2 = RO2 + C(ind_C44O2)
  IF (ind_C512O2>0)               RO2 = RO2 + C(ind_C512O2)
  IF (ind_C513O2>0)               RO2 = RO2 + C(ind_C513O2)
  IF (ind_CHOC3COO2>0)            RO2 = RO2 + C(ind_CHOC3COO2)
  IF (ind_C312COCO3>0)            RO2 = RO2 + C(ind_C312COCO3)
  IF (ind_HOC2H4CO3>0)            RO2 = RO2 + C(ind_HOC2H4CO3)
  IF (ind_LNAPINABO2>0)           RO2 = RO2 + C(ind_LNAPINABO2)
  IF (ind_C810O2>0)               RO2 = RO2 + C(ind_C810O2)
  IF (ind_C514O2>0)               RO2 = RO2 + C(ind_C514O2)
  IF (ind_CHOCOCH2O2>0)           RO2 = RO2 + C(ind_CHOCOCH2O2)
  ! BPINENE-related:
  IF (ind_ROO6R1O2>0)             RO2 = RO2 + C(ind_ROO6R1O2)
  IF (ind_ROO6R3O2>0)             RO2 = RO2 + C(ind_ROO6R3O2)
  IF (ind_RO6R1O2>0)              RO2 = RO2 + C(ind_RO6R1O2)
  IF (ind_RO6R3O2>0)              RO2 = RO2 + C(ind_RO6R3O2)
  IF (ind_BPINAO2>0)              RO2 = RO2 + C(ind_BPINAO2)
  IF (ind_C8BCO2>0)               RO2 = RO2 + C(ind_C8BCO2)
  IF (ind_NOPINDO2>0)             RO2 = RO2 + C(ind_NOPINDO2)
  IF (ind_LNBPINABO2>0)           RO2 = RO2 + C(ind_LNBPINABO2)
  ! aromatics-related:
  IF (ind_BZBIPERO2>0)            RO2 = RO2 + C(ind_BZBIPERO2)
  IF (ind_C6H5CH2O2>0)            RO2 = RO2 + C(ind_C6H5CH2O2)
  IF (ind_TLBIPERO2>0)            RO2 = RO2 + C(ind_TLBIPERO2)
  IF (ind_BZEMUCCO3>0)            RO2 = RO2 + C(ind_BZEMUCCO3)
  IF (ind_BZEMUCO2>0)             RO2 = RO2 + C(ind_BZEMUCO2)
  IF (ind_C5DIALO2>0)             RO2 = RO2 + C(ind_C5DIALO2)
  IF (ind_NPHENO2>0)              RO2 = RO2 + C(ind_NPHENO2)
  IF (ind_PHENO2>0)               RO2 = RO2 + C(ind_PHENO2)
  IF (ind_CRESO2>0)               RO2 = RO2 + C(ind_CRESO2)
  IF (ind_NCRESO2>0)              RO2 = RO2 + C(ind_NCRESO2)
  IF (ind_TLEMUCCO3>0)            RO2 = RO2 + C(ind_TLEMUCCO3)
  IF (ind_TLEMUCO2>0)             RO2 = RO2 + C(ind_TLEMUCO2)
  IF (ind_C615CO2O2>0)            RO2 = RO2 + C(ind_C615CO2O2)
  IF (ind_MALDIALCO3>0)           RO2 = RO2 + C(ind_MALDIALCO3)
  IF (ind_EPXDLCO3>0)             RO2 = RO2 + C(ind_EPXDLCO3)
  IF (ind_C3DIALO2>0)             RO2 = RO2 + C(ind_C3DIALO2)
  IF (ind_MALDIALO2>0)            RO2 = RO2 + C(ind_MALDIALO2)
  IF (ind_C6H5O2>0)               RO2 = RO2 + C(ind_C6H5O2)
  IF (ind_C6H5CO3>0)              RO2 = RO2 + C(ind_C6H5CO3)
  IF (ind_OXYL1O2>0)              RO2 = RO2 + C(ind_OXYL1O2)
  IF (ind_C5CO14O2>0)             RO2 = RO2 + C(ind_C5CO14O2)
  IF (ind_NBZFUO2>0)              RO2 = RO2 + C(ind_NBZFUO2)
  IF (ind_BZFUO2>0)               RO2 = RO2 + C(ind_BZFUO2)
  IF (ind_HCOCOHCO3>0)            RO2 = RO2 + C(ind_HCOCOHCO3)
  IF (ind_CATEC1O2>0)             RO2 = RO2 + C(ind_CATEC1O2)
  IF (ind_MCATEC1O2>0)            RO2 = RO2 + C(ind_MCATEC1O2)
  IF (ind_C5DICARBO2>0)           RO2 = RO2 + C(ind_C5DICARBO2)
  IF (ind_NTLFUO2>0)              RO2 = RO2 + C(ind_NTLFUO2)
  IF (ind_TLFUO2>0)               RO2 = RO2 + C(ind_TLFUO2)
  IF (ind_NPHEN1O2>0)             RO2 = RO2 + C(ind_NPHEN1O2)
  IF (ind_NNCATECO2>0)            RO2 = RO2 + C(ind_NNCATECO2)
  IF (ind_NCATECO2>0)             RO2 = RO2 + C(ind_NCATECO2)
  IF (ind_NBZQO2>0)               RO2 = RO2 + C(ind_NBZQO2)
  IF (ind_PBZQO2>0)               RO2 = RO2 + C(ind_PBZQO2)
  IF (ind_NPTLQO2>0)              RO2 = RO2 + C(ind_NPTLQO2)
  IF (ind_PTLQO2>0)               RO2 = RO2 + C(ind_PTLQO2)
  IF (ind_NCRES1O2>0)             RO2 = RO2 + C(ind_NCRES1O2)
  IF (ind_MNNCATECO2>0)           RO2 = RO2 + C(ind_MNNCATECO2)
  IF (ind_MNCATECO2>0)            RO2 = RO2 + C(ind_MNCATECO2)
  IF (ind_MECOACETO2>0)           RO2 = RO2 + C(ind_MECOACETO2)
  IF (ind_CO2H3CO3>0)             RO2 = RO2 + C(ind_CO2H3CO3)
  IF (ind_MALANHYO2>0)            RO2 = RO2 + C(ind_MALANHYO2)
  IF (ind_NDNPHENO2>0)            RO2 = RO2 + C(ind_NDNPHENO2)
  IF (ind_DNPHENO2>0)             RO2 = RO2 + C(ind_DNPHENO2)
  IF (ind_NDNCRESO2>0)            RO2 = RO2 + C(ind_NDNCRESO2)
  IF (ind_DNCRESO2>0)             RO2 = RO2 + C(ind_DNCRESO2)
  IF (ind_C5CO2OHCO3>0)           RO2 = RO2 + C(ind_C5CO2OHCO3)
  IF (ind_C6CO2OHCO3>0)           RO2 = RO2 + C(ind_C6CO2OHCO3)
  IF (ind_MMALANHYO2>0)           RO2 = RO2 + C(ind_MMALANHYO2)
  IF (ind_ACCOMECO3>0)            RO2 = RO2 + C(ind_ACCOMECO3)
  IF (ind_C4CO2DBCO3>0)           RO2 = RO2 + C(ind_C4CO2DBCO3)
  IF (ind_C5CO2DBCO3>0)           RO2 = RO2 + C(ind_C5CO2DBCO3)
  IF (ind_NSTYRENO2>0)            RO2 = RO2 + C(ind_NSTYRENO2)
  IF (ind_STYRENO2>0)             RO2 = RO2 + C(ind_STYRENO2)
  ! pseudo first order rate constants    ! occurence
  k1_RO2RCO3      = RO2 * k_RO2RCO3      ! 51
  k1_RO2pRO2      = RO2 * k_RO2pRO2      ! 5
  k1_RO2sRO2      = RO2 * k_RO2sRO2      ! 11+1
  k1_RO2tRO2      = RO2 * k_RO2tRO2      ! 13+1
  k1_RO2pORO2     = RO2 * k_RO2pORO2     ! 11+2
  k1_RO2sORO2     = RO2 * k_RO2sORO2     ! 33+2
  k1_RO2tORO2     = RO2 * k_RO2tORO2     ! 17
  k1_RO2LISOPACO2 = RO2 * k_RO2LISOPACO2 ! 3
  k1_RO2ISOPBO2   = RO2 * k_RO2ISOPBO2   ! 1
  k1_RO2ISOPDO2   = RO2 * k_RO2ISOPDO2   ! 13
#ENDINLINE {above lines go into the SUBROUTINES UPDATE_RCONST and UPDATE_PHOTO}
#INLINE F90_RATES
  ELEMENTAL REAL(dp) FUNCTION k_SIV_H2O2 (k_298,tdep,cHp,temp)
    ! special rate function for S(IV) + H2O2
    REAL,     INTENT(IN) :: k_298 ! k at T = 298.15K
    REAL,     INTENT(IN) :: tdep  ! temperature dependence
    REAL(dp), INTENT(IN) :: cHp   ! c(H+)
    REAL(dp), INTENT(IN) :: temp  ! temperature
    INTRINSIC :: EXP
    k_SIV_H2O2 = k_298 * EXP(tdep*(1._dp/temp-3.3540E-3_dp)) &
      * cHp / (cHp+0.1_dp)
  END FUNCTION k_SIV_H2O2
  ELEMENTAL REAL(dp) FUNCTION k_3rd_iupac(temp,cair,k0_300K,n,kinf_300K,m,fc)
    ! IUPAC three body reaction formula (iupac.pole-ether.fr)
    INTRINSIC :: LOG10
    REAL(dp), INTENT(IN) :: temp      ! temperature [K]
    REAL(dp), INTENT(IN) :: cair      ! air concentration [molecules/cm3]
    REAL,     INTENT(IN) :: k0_300K   ! low pressure limit at 300 K
    REAL,     INTENT(IN) :: n         ! exponent for low pressure limit
    REAL,     INTENT(IN) :: kinf_300K ! high pressure limit at 300 K
    REAL,     INTENT(IN) :: m         ! exponent for high pressure limit
    REAL,     INTENT(IN) :: fc        ! broadening factor (e.g. 0.45 or 0.6...)
    REAL                 :: nu        ! N
    REAL                 :: zt_help, k0_T, kinf_T, k_ratio
    zt_help = 300._dp/temp
    k0_T    = k0_300K   * zt_help**(n) * cair ! k_0   at current T
    kinf_T  = kinf_300K * zt_help**(m)        ! k_inf at current T
    k_ratio = k0_T/kinf_T
    nu      = 0.75-1.27*LOG10(fc)
    k_3rd_iupac = k0_T/(1._dp+k_ratio)* &
      fc**(1._dp/(1._dp+(LOG10(k_ratio)/nu)**2))
  END FUNCTION k_3rd_iupac
  ELEMENTAL REAL(dp) FUNCTION alpha_AN(n,ro2type,bcarb,gcarb,abic,temp,cair)
  ! Alkyl nitrate yields dependent on T and P according to
  ! Arey. ref3202 and Teng, ref3189
    INTRINSIC :: LOG10
    INTEGER,  INTENT(IN) :: n         ! number of heavy atoms (C, O, N) except the O atom of beta-carbonyls
    INTEGER,  INTENT(IN) :: ro2type   ! 1, 2 or 3 for primary, secondary and tertiary RO2
    INTEGER,  INTENT(IN) :: bcarb     ! 1 for beta-carbonyl group, 0 for none
    INTEGER,  INTENT(IN) :: gcarb     ! 1 for gamma-carbonyl group, 0 for none
    INTEGER,  INTENT(IN) :: abic      ! 1 for bicyclic peroxy from aromatics, 0 for none
    REAL(dp), INTENT(IN) :: temp      ! temperature [K]
    REAL(dp), INTENT(IN) :: cair      ! air concentration [molecules/cm3]
    REAL(dp), PARAMETER  :: alpha=2.E-22, beta=1.0, Yinf_298K=0.43, F=0.41, m0=0., minf=8.0
    REAL(dp)             :: m           ! factor for primary, secondary and tertiary RO2
    REAL(dp)             :: bcf,gcf,abf ! reduction factors for the presence of beta-carbonyl and gamma-carbonyl group and a bicyclic peroxy from aromatics
    REAL(dp)             :: Y0_298K, Y0_298K_tp, Yinf_298K_t, zeta, k_ratio
    m = 1. ! According to Teng, ref3189
    IF (bcarb .EQ. 1) THEN
      bcf = 0.19 ! derived from Praske, ref3190: alpha_AN = 0.03 for the secondary HMKO2 relative to alpha_AN for 6C RO2 (0.16)
    ELSE IF (bcarb .EQ. 0) THEN
      bcf = 1.
    ELSE
      bcf = 1.
    ENDIF
    IF (gcarb .EQ. 1) THEN
      gcf = 0.44 ! derived from Praske, ref3190: alpha_AN = 0.07 for the primary HMKO2 relative to alpha_AN for 6C RO2 (0.16)
    ELSE IF (gcarb .EQ. 0) THEN
      gcf = 1.
    ELSE
      gcf = 1.
    ENDIF
    IF (abic .EQ. 1) THEN
      abf = 0.24 ! ratio of AN-yield for toluene (Elrod et al., ref3180), 5.5% at 200 torr, and this SAR for linear alkyl RO2 with 9 heavy atoms, 23.3%
    ELSE IF (abic .EQ. 0) THEN
      abf = 1.
    ENDIF
    Y0_298K     = alpha*EXP(beta*n)
    Y0_298K_tp  = Y0_298K * cair * (temp/298)**(-m0)
    Yinf_298K_t = Yinf_298K * (temp/298)**(-minf)
    zeta        = 1/(1+LOG10(Y0_298K_tp/Yinf_298K_t)**2)
    k_ratio     = (Y0_298K_tp/(1+Y0_298K_tp/Yinf_298K_t))*F**zeta
    alpha_AN    = k_ratio/(1+k_ratio) * m * bcf * gcf * abf
  END FUNCTION alpha_AN
  ELEMENTAL REAL(dp) FUNCTION k_limited (k3rd,cHp)
    ! diffusion limitation caps 3rd order rate coefficients
    REAL(dp), INTENT(IN) :: k3rd  ! 3rd order rate coefficient
    REAL(dp), INTENT(IN) :: cHp   ! c(H+)
    REAL(dp), PARAMETER  :: DiffLimit = 1E10 ! diffusion limitation [M-1s-1]
    INTRINSIC :: EXP
    k_limited = 1._dp / ( 1._dp/k3rd + cHp/DiffLimit)
  END FUNCTION k_limited
  ELEMENTAL REAL(dp) FUNCTION k_N2_O(temp,temp_ion)
    REAL(dp), INTENT(IN) :: temp      ! temperature [K]
    REAL(dp), INTENT(IN) :: temp_ion  ! ion temperature [K]
    REAL                 :: temp_mean
    temp_mean = (temp_ion + temp)/2
    k_N2_O = 1.4E-10*(300./temp_mean)**0.44
  END FUNCTION k_N2_O
  ELEMENTAL REAL(dp) FUNCTION k_Op_O2(temp,temp_ion)
    REAL(dp), INTENT(IN) :: temp      ! temperature [K]
    REAL(dp), INTENT(IN) :: temp_ion  ! ion temperature [K]
    REAL(dp)             :: temp_mean
    temp_mean  = 0.667*temp_ion + 0.333*temp
    k_Op_O2  = 2.82E-11 - 7.74E-12*(temp_mean/300.) + &
      1.073E-12*(temp_mean/300.)**2 - 5.17E-14*(temp_mean/300.)**3 + &
      9.65E-16*(temp_mean/300.)**4
  END FUNCTION k_Op_O2
  ELEMENTAL REAL(dp) FUNCTION k_Op_N2(temp,temp_ion)
    REAL(dp), INTENT(IN) :: temp      ! temperature [K]
    REAL(dp), INTENT(IN) :: temp_ion  ! ion temperature [K]
    REAL(dp)             :: temp_mean
    temp_mean = 0.6363*temp_ion + 0.3637*temp
    k_Op_N2 = 1.533E-12 - 5.92E-13*(temp_mean/300.) + 8.6E-14*(temp_mean/300.)**2
  END FUNCTION k_Op_N2
  ELEMENTAL REAL(dp) FUNCTION k_RO2_HO2(temp,nC)
    real(dp), intent(in) :: temp      ! temperature [K]
    integer, intent(in)  :: nC        ! q-ty of C atoms
    k_RO2_HO2 = 2.91E-13*EXP(1300./temp)*(1.-EXP(-0.245*REAL(nC,dp))) ! ref1630
  END FUNCTION k_RO2_HO2
#ENDINLINE {above lines go into MODULE messy_mecca_kpp_Rates}
#EQUATIONS
{<G1nnn> ------------------------------- O -------------------------}{@\myhline}
<G1000>  O2   + O1D      = RRG1000 +  O3P + O2  {+ 189. kJmol} : {%UpStTrG} 3.3E-11*EXP(55./temp); {&3245}
<G1001>  O2   + O3P {+M} = RRG1001 +  O3                       : {%UpStTrG} 6.0E-34*((temp/300.)**(-2.4))*cair; {&3245}
{<G2nnn> ------------------------------- H -------------------------}{@\myhline}
<G2100>  H    + O2 {+M}  = RRG2100 +  HO2       {+ 204. kJmol} : {%UpStTrG} k_3rd(temp,cair,4.4E-32,1.3,7.5E-11,-0.2,0.6); {&3245}
<G2104>  OH   + O3       = RRG2104 +  HO2 + O2  {+ 167. kJmol} : {%UpStTrG} 1.7E-12*EXP(-940./temp); {&3245}
<G2105>  OH   + H2       = RRG2105 +  H2O + H   {+ 62.7 kJmol} : {%UpStTrG} 2.8E-12*EXP(-1800./temp); {&3245}
<G2107>  HO2  + O3       = RRG2107 +  OH + 2 O2 {+ 119. kJmol} : {%UpStTrG} 1.E-14*EXP(-490./temp); {&3245}
<G2109>  HO2  + OH       = RRG2109 +  H2O + O2  {+ 295. kJmol} : {%UpStTrG} 4.8E-11*EXP(250./temp); {&3245}
<G2110>  HO2  + HO2      = RRG2110 +  H2O2 + O2 {+ 165. kJmol} : {%UpStTrG} k_HO2_HO2; {&3245} // The rate coefficient is: \code{k_HO2_HO2} = \code{(3.0E-13*EXP(460./temp)+2.1E-33*EXP(920./temp)*cair)*(1.+1.4E-21*EXP(2200./temp)*C(ind_H2O))}.
<G2111>  H2O  + O1D      = RRG2111 +  2 OH      {+ 119. kJmol} : {%UpStTrG} 1.63E-10*EXP(60./temp); {&3245}
<G2112>  H2O2 + OH       = RRG2112 +  H2O + HO2 {+ 130. kJmol} : {%UpStTrG} 1.8E-12; {&3245}
<G2117>  H2O  + H2O      = RRG2117 +  H2OH2O                   : {%UpStTrG} 6.521E-26*temp*EXP(1851.09/temp)*EXP(-5.10485E-3*temp); {&3052} // Converted to Kc [molec-1 cm3]= Kp*R*T/NA, where R is 82.05736 [cm3 atm K−1 mol−1].
<G2118>  H2OH2O          = RRG2118 +  H2O  + H2O               : {%UpStTrG} 1.E0; // Assuming fast equilibrium.
{<G3nnn> ------------------------------- N -------------------------}{@\myhline}
<G3101>  N2   + O1D      = RRG3101 +  O3P + N2  {+ 189. kJmol}  : {%UpStTrGN} 2.15E-11*EXP(110./temp); {&3245}
<G3103>  NO   + O3       = RRG3103 +  NO2 + O2  {+ 201. kJmol}  : {%UpStTrGN} 3.0E-12*EXP(-1500./temp); {&3245}
<G3106>  NO2  + O3       = RRG3106 +  NO3 + O2                  : {%StTrGN}   1.2E-13*EXP(-2450./temp); {&3245}
<G3108>  NO3  + NO       = RRG3108 +  2 NO2                     : {%StTrGN}   1.5E-11*EXP(170./temp); {&3245}
<G3109>  NO3  + NO2 {+M} = RRG3109 +  N2O5                      : {%UpStTrGN} k_NO3_NO2; {&3245} // The rate coefficient is: \code{k_NO3_NO2} = \code{k_3rd(temp,cair,2.4E-30,3.0,1.6E-12,-0.1,0.6)}.
<G3110>  N2O5       {+M} = RRG3110 +  NO2 + NO3                 : {%StTrGN}   k_NO3_NO2/(5.8E-27*EXP(10840./temp)); {&3245} // The rate coefficient is defined as backward reaction divided by equilibrium constant.
<G3200>  NO   + OH {+M}  = RRG3200 +  HONO          : {%TrGN}   k_3rd(temp,cair,7.0E-31,2.6,3.6E-11,0.1,0.6); {&3245}
<G3201>  NO   + HO2      = RRG3201 +  NO2   + OH {+ 33.8 kJmol} : {%UpStTrGN} 3.3E-12*EXP(270./temp); {&3245}
<G3202a> NO2  + OH  {+M} = RRG3202a +  HNO3          : {%UpStTrGN} (1.-alpha_HOONO) * k_NO2_OH; {&3491}
<G3202b> NO2  + OH  {+M} = RRG3202b +  HOONO         : {%UpStTrGN} alpha_HOONO * k_NO2_OH; {&3491}
<G3203>  NO2  + HO2 {+M} = RRG3203 +  HNO4          : {%StTrGN} k_NO2_HO2; {&3245} // The rate coefficient is: \code{k_NO2_HO2} = \code{k_3rd(temp,cair,1.9E-31,3.4,4.0E-12,0.3,0.6)}.
<G3204>  NO3  + HO2      = RRG3204 +  NO2 + OH + O2 : {%TrGN}   3.5E-12; {&3245}
<G3205>  HONO + OH       = RRG3205 +  NO2 + H2O     : {%TrGN}   1.8E-11*EXP(-390./temp); {&3245}
<G3206>  HNO3 + OH       = RRG3206 +  H2O   + NO3   : {%StTrGN} k_HNO3_OH; {&3325} // The rate coefficient is: \code{k_HNO3_OH} = \code{1.32E-14 * EXP(527/temp) + 1 / ( 1 / }\\\code{(7.39E-32 * EXP(453/temp)*cair) + 1 / }\\\code{(9.73E-17 * EXP(1910/temp)) )}
<G3207>  HNO4       {+M} = RRG3207 +  NO2   + HO2   : {%StTrGN} k_NO2_HO2/(2.1E-27*EXP(10900./temp)); {&3245} // The rate coefficient is defined as backward reaction divided by equilibrium constant.
<G3208>  HNO4 + OH       = RRG3208 +  NO2   + H2O   : {%StTrGN} 1.3E-12*EXP(380./temp); {&3245}
<G3209>  NH3   + OH      = RRG3209 +  NH2 + H2O     : {%TrGN}   1.7E-12*EXP(-710./temp); {&2415}
<G3210>  NH2   + O3      = RRG3210 +  NH2O + O2     : {%TrGN}   4.3E-12*EXP(-930./temp); {&2415}
<G3211>  NH2   + HO2     = RRG3211 +  NH2O + OH     : {%TrGN}   4.8E-07*EXP(-628./temp)*(temp)**(-1.32); {&2415}
<G3212>  NH2   + HO2     = RRG3212 +  HNO + H2O     : {%TrGN}   9.4E-09*EXP(-356./temp)*(temp)**(-1.12); {&2415}
<G3213>  NH2   + NO      = RRG3213 +  HO2 + OH + N2 : {%TrGN}   1.92E-12*((temp/298.)**(-1.5)); {&2415}
<G3214>  NH2   + NO      = RRG3214 +  N2 + H2O      : {%TrGN}   1.41E-11*((temp/298.)**(-1.5)); {&2415}
<G3215>  NH2   + NO2     = RRG3215 +  N2O + H2O     : {%TrGN}   1.2E-11*((temp/298.)**(-2.0)); {&2415}
<G3216>  NH2   + NO2     = RRG3216 +  NH2O + NO     : {%TrGN}   0.8E-11*((temp/298.)**(-2.0)); {&2415}
<G3217>  NH2O  + O3      = RRG3217 +  NH2 + O2      : {%TrGN}   1.2E-14; {&2415}
<G3218>  NH2O            = RRG3218 +  NHOH          : {%TrGN}   1.3E3; {&2415}
<G3219>  HNO   + OH      = RRG3219 +  NO + H2O      : {%TrGN}   8.0E-11*EXP(-500./temp); {&2415}
<G3220>  HNO   + NHOH    = RRG3220 +  NH2OH + NO    : {%TrGN}   1.66E-12*EXP(-1500./temp); {&2415}
<G3221>  HNO   + NO2     = RRG3221 +  HONO + NO     : {%TrGN}   1.0E-12*EXP(-1000./temp); {&2415}
<G3222>  NHOH  + OH      = RRG3222 +  HNO + H2O     : {%TrGN}   1.66E-12; {&2415}
<G3223>  NH2OH + OH      = RRG3223 +  NHOH + H2O    : {%TrGN}   4.13E-11*EXP(-2138./temp); {&2415}
<G3224>  HNO   + O2      = RRG3224 +  HO2 + NO      : {%TrGN}   3.65E-14*EXP(-4600./temp); {&2415}
<G3227>  HOONO {+M}      = RRG3227 +  NO2 + OH      : {%UpStTrGN} (alpha_HOONO*k_NO2_OH)/(3.5E-27*EXP(10135./temp)); // Backward reaction divided by equilibrium constant from \citet{3245}.
<G3228>  HOONO + OH      = RRG3228 +  H2O + NO3     : {%UpStTrGN} 1.3E-12*EXP(380./temp); {&3245} // Same as for \chem{OH} + \chem{HNO_4}.
{<G4nnn> ------------------------------- C -------------------------}{@\myhline}
<G4101>  CH4      + OH       = RRG4101 +  CH3 + H2O          : {%StTrG} 1.85E-20*EXP(2.82*LOG(temp)-987./temp); {&1627}
<G4102>  CH3OH    + OH {+.85 O2} = RRG4102 +  .85 HCHO + .85 HO2 + .15 CH3O + H2O   : {%TrG} 6.38E-18*((temp)**2)*EXP(144./temp); {&1759}
<G4103a> CH3O2    + HO2      = RRG4103a +  CH3OOH + O2        : {%StTrG} 3.8E-13*EXP(780./temp)/(1.+1./498.*EXP(1160./temp)); {&1759}
<G4103b> CH3O2    + HO2      = RRG4103b +  HCHO + H2O + O2    : {%StTrG} 3.8E-13*EXP(780./temp)/(1.+498.*EXP(-1160./temp)); {&1759}
<G4104a> CH3O2    + NO       = RRG4104a +  CH3O + NO2         : {%StTrGN} 2.3E-12*EXP(360./temp)*(1.-beta_CH3NO3); {&1759, 3177, 3164}
<G4104b> CH3O2    + NO       = RRG4104b +  CH3NO3             : {%StTrGN} 2.3E-12*EXP(360./temp)*beta_CH3NO3; {&1759, 3177, 3164} // Methyl nitrate yield according to \citet{2130} but reduced by a factor of 10 according to the upper limit derived from measurements by \citet{2048}.
<G4105>  CH3O2    + NO3      = RRG4105 +  CH3O + NO2 + O2    : {%TrGN} 1.2E-12; {&1759}
<G4106a> CH3O2               = RRG4106a +  CH3O + .5 O2                : {%StTrG} 7.4E-13*EXP(-520./temp)*RO2*2.; {&1759}
<G4106b> CH3O2               = RRG4106b +  .5 HCHO + .5 CH3OH + .5 O2  : {%StTrG} (k_CH3O2-7.4E-13*EXP(-520./temp))*RO2*2.; {&1759}
<G4107>  CH3OOH   + OH       = RRG4107 +  .6 CH3O2 + .4 HCHO + .4 OH + H2O : {%StTrG} k_CH3OOH_OH; {&1745}
<G4108>  HCHO     + OH       = RRG4108 +  CO + H2O + HO2     : {%StTrG} 9.52E-18*EXP(2.03*LOG(temp)+636./temp); {&1634}
<G4109>  HCHO     + NO3      = RRG4109 +  HNO3 + CO + HO2    : {%TrGN} 3.4E-13*EXP(-1900./temp); {&3245} // Same temperature dependence as for \chem{CH_3CHO}+\chem{NO_3} assumed.
<G4110>  CO       + OH       = RRG4110 +  H + CO2 {+ 103. kJmol} : {%UpStTrG} (1.57E-13+cair*3.54E-33); {&1628}
<G4111>  HCOOH    + OH {+O2} = RRG4111 +  CO2 + HO2 + H2O    : {%TrG} 2.94E-14*exp(786./temp)+9.85E-13*EXP(-1036./temp); {&3038}
<G4114>  CH3O2    + NO2      = RRG4114 +  CH3O2NO2           : {%StTrGN} k_NO2_CH3O2; {&3245}
<G4115>  CH3O2NO2 {+ M}      = RRG4115 +  CH3O2 + NO2        : {%StTrGN} k_NO2_CH3O2/(9.5E-29*EXP(11234./temp)); {&3245} // The rate coefficient is defined as backward reaction divided by equilibrium constant.
<G4116>  CH3O2NO2 + OH       = RRG4116 +  HCHO + NO3 + H2O   : {%StTrGN} 3.00E-14 ; // Same value as for PAN + OH.
<G4117>  CH3NO3   + OH {+ O2}= RRG4117 +  H2O + HCHO + NO2   : {%StTrGN} 4.0E-13*EXP(-845./temp); {&1759}
<G4118>  CH3O     {+ O2}     = RRG4118 +  HO2 + HCHO         : {%StTrG} 1.3E-14*exp(-663./temp)*c(ind_O2); {&3043}
<G4119a> CH3O     + NO2 {+ M}= RRG4119a +  CH3NO3             : {%StTrGN} k_3rd_iupac(temp,cair,8.1E-29,4.5,2.1E-11,0.,0.44); {&1759}
<G4119b> CH3O     + NO2      = RRG4119b +  HCHO + HONO        : {%StTrGN} 9.6E-12*EXP(-1150./temp); {&1759}
<G4120a> CH3O     + NO       = RRG4120a +  CH3ONO             : {%StTrGN} k_3rd_iupac(temp,cair,2.6E-29,2.8,3.3E-11,0.6,REAL(EXP(-temp/900.),SP)); {&1759}
<G4120b> CH3O     + NO       = RRG4120b +  HCHO + HNO         : {%StTrGN} 2.3E-12*(temp/300.)**(0.7); {&1759}
<G4121>  CH3O2    + O3       = RRG4121 +  CH3O + 2 O2        : {%StTrG} 2.9E-16*exp(-1000./temp); {&3245}
<G4122>  CH3ONO   + OH {+ O2}= RRG4122 +  H2O + HCHO + NO    : {%StTrGN} 1.E-10*exp(-1764./temp); {&3044}
<G4123>  HCHO     + HO2      = RRG4123 +  HOCH2O2            : {%StTrG} 9.7E-15*EXP(625./temp); {&1759}
<G4124>  HOCH2O2             = RRG4124 +  HCHO + HO2         : {%StTrG} 2.4E12*EXP(-7000./temp); {&1759}
<G4125>  HOCH2O2  + HO2      = RRG4125 +  .5 HOCH2OOH + .5 HCOOH + .2 OH + .2 HO2 + .3 H2O + .8 O2 : {%StTrG} 5.6E-15*EXP(2300./temp); {&1759}
<G4126>  HOCH2O2  + NO {+ O2}= RRG4126 +  NO2 + HO2 + HCOOH  : {%StTrGN} 0.7275*2.3E-12*EXP(360./temp); {&1759} // Same as for G4104 but scaled to match the recommeded value at 298K.
<G4127>  HOCH2O2  + NO3      = RRG4127 +  NO2 + HO2 + HCOOH  : {%StTrGN} 1.2E-12;  // Same as for CH3O2 + NO3 in G4105.
<G4129a> HOCH2O2             = RRG4129a +  HCOOH + HO2                   : {%StTrG} (k_CH3O2*5.5E-12)**(0.5)*RO2*2.; {&1759}
<G4129b> HOCH2O2             = RRG4129b +  .5 HCOOH + .5 HOCH2OH + .5 O2 : {%StTrG} (k_CH3O2*5.7E-14*EXP(750./temp))**(0.5)*RO2*2.; {&1759}
<G4130a> HOCH2OOH + OH       = RRG4130a +  HOCH2O2 + H2O      : {%StTrG} k_ROOHRO; {&3030} // SAR for H-abstraction by OH.
<G4130b> HOCH2OOH + OH       = RRG4130b +  HCOOH + H2O + OH   : {%StTrG} k_ROHRO + k_s*f_sOOH*f_sOH; {&3030} // SAR for H-abstraction by OH.
<G4132>  HOCH2OH  + OH {+ O2}= RRG4132 +  HO2 + HCOOH + H2O  : {%StTrG} 2.*k_ROHRO + k_s*f_sOH*f_sOH; {&3030} // SAR for H-abstraction by OH.
<G4133>  CH3O2    + OH       = RRG4133 +  CH3O + HO2         : {%StTrG} 1.4E-10; {&3042} // Lower limit of the rate constant. Products uncertain but \chem{CH_3OH} can be excluded because of a likely high energy barrier (L.\ Vereecken, pers. comm.). \chem{CH_2OO} production cannot be excluded.
<G4134>  CH2OO    {+ O2}     = RRG4134 +  CO + HO2 + OH      : {%StTrG} 1.124E+14*EXP(-10000./temp); // Estimate based on the decomposition lifetime of 3 s \citep{3047} and a 20 kcal/mol energy barrier \citep{3040}.
<G4135>  CH2OO    + H2O      = RRG4135 +  HOCH2OOH           : {%StTrG} k_CH2OO_NO2*3.6E-6; {&3048} // Rate constant for \chem{CH_2OO + NO_2} (G4138) multiplied by the factor from \citet{3048}.
<G4136>  CH2OO    + H2OH2O   = RRG4136 +  HOCH2OOH + H2O     : {%StTrG} 5.2E-12; {&3173, 3174} // Average of two measurements.
<G4137>  CH2OO    + NO       = RRG4137 +  HCHO + NO2         : {%StTrGN} 6.E-14; {&3041} // Upper limit.
<G4138>  CH2OO    + NO2      = RRG4138 +  HCHO + NO3         : {%StTrGN} k_CH2OO_NO2; {&3041, 3049} // Average of 7.E-12 and 1.5E-12.
<G4140>  CH2OO    + CO       = RRG4140 +  HCHO + CO2         : {%StTrG} 3.6E-14; {&3039}
<G4141>  CH2OO    + HCOOH    = RRG4141 +  2 HCOOH            : {%StTrG} 1.E-10; {&3051} // \chem{HOOCH_2OCHO} forms and then decomposes to formic anhydride \citep{2071} which hydrolyses in the humid atmosphere \citep{3045}.
<G4142>  CH2OO    + HCHO     = RRG4142 +  2 LCARBON          : {%StTrG} 1.7E-12; {&3049} // High-pressure limit.
<G4143>  CH2OO    + CH3OH    = RRG4143 +  2 LCARBON          : {%StTrG} 5.E-12; {&3039} // Generic estimate for reaction with alcohols.
<G4144>  CH2OO    + CH3O2    = RRG4144 +  2 LCARBON          : {%StTrG} 5.E-12; {&3039} // Generic estimate for reaction with \chem{RO_2}.
<G4145>  CH2OO    + HO2      = RRG4145 +  LCARBON            : {%StTrG} 5.E-12; {&3039}
<G4146>  CH2OO    + O3       = RRG4146 +  HCHO + 2 O2        : {%StTrG} 1.E-12; {&3053}
<G4147>  CH2OO    + CH2OO    = RRG4147 +  2 HCHO + O2        : {%StTrG} 6.E-11; {&3054}
<G4148>  HOCH2O2  + NO2      = RRG4148 +  HOCH2O2NO2         : {%StTrGN} k_NO2_CH3O2; // Same value as for \chem{NO_2}+\chem{CH_3O_2}.
<G4149>  HOCH2O2NO2 {+ M}    = RRG4149 +  HOCH2O2 + NO2      : {%StTrGN} k_NO2_CH3O2/(9.5E-29*EXP(11234./temp)); {&3055} // \citet{3055} estimated a decomposition rate equal to that of \chem{CH_3O_2NO_2}.
<G4150>  HOCH2O2NO2 + OH     = RRG4150 +  HCOOH + NO3 + H2O  : {%StTrGN} 9.50E-13*EXP(-650./temp)*f_sOH; // Value for \chem{CH_3O_2NO_2} + OH, H-abstraction enhanced by the HO-group by f\_sOH.
<G4151>  CH3      + O2 {+ M} = RRG4151 +  CH3O2              : {%StTrG} k_3rd_iupac(temp,cair,7.0E-31,3.,1.8E-12,-1.1,0.33); {&1759}
<G4152>  CH3      + O3       = RRG4152 +  .956 HCHO + .956 H + .044 CH3O + O2 : {%StTrG} 5.1E-12*exp(-210./temp); {&3056, 3057}
<G4153>  CH3      + O3P      = RRG4153 +  .83 HCHO + .83 H + .17 CO + .17 H2 + .17 H : {%StTrG} 1.3E-10; {&1759}
<G4154>  CH3O     + O3       = RRG4154 +  CH3O2 + O2         : {%StTrG} 2.53E-14; {&3056} // Products assumed to be \chem{CH_3O_2 + O_2} (could also be \chem{HCHO + O_2 + OH}).
<G4155>  CH3O     + O3P      = RRG4155 +  .75 CH3 + .75 O2 + .25 HCHO + .25 OH  : {%StTrG} 2.5E-11; {&3037}
<G4156>  CH3O2    + O3P      = RRG4156 +  CH3O + O2          : {%StTrG} 4.3E-11; {&3061}
<G4157>  HCHO     + O3P      = RRG4157 +  .7 OH + .7 CO + .3 H + .3 CO2 + HO2 : {%StTrG} 3.4E-11*EXP(-1600./temp); {&3245}
<G4158>  CH2OOA              = RRG4158 +  .37 CH2OO + .47 CO + .47 H2O + .16 HO2 + .16 CO + .16 OH : {%TrG} KDEC; {&1759}
<G4159>  HCN      + OH       = RRG4159 +  H2O + CN           : {%TrGN} k_3rd(temp,cair,4.28E-33,1.0,REAL(4.25E-13*EXP(-1150./temp),SP),1.0,0.8); {&3191}
<G4160a> HCN      + O1D      = RRG4160a +  O3P + HCN          : {%TrGN} 1.08E-10*EXP(105./temp)*0.15*EXP(200./temp); {&3197}
<G4160b> HCN      + O1D      = RRG4160b +  H + NCO            : {%TrGN} 1.08E-10*EXP(105./temp)*0.68/2.; {&3197} // Half of the H-yield is attributed to fast secondary chemistry.
<G4160c> HCN      + O1D      = RRG4160c +  OH + CN            : {%TrGN} 1.08E-10*EXP(105./temp)*(1.-(0.68/2.+0.15*EXP(200./temp))); {&3197} // The NH + CO channel is also significant but neglected here.
<G4161>  HCN      + O3P      = RRG4161 +  H + NCO            : {%TrGN} 1.0E-11*EXP(-4000./temp); {&3245} // No studies below 450 K and only the major channel is considered.
<G4162>  CN       + O2       = RRG4162 +  NCO + O3P          : {%TrGN} 1.2E-11*EXP(210./temp)*0.75; {&3037}
<G4163>  CN       + O2       = RRG4163 +  CO +  NO           : {%TrGN} 1.2E-11*EXP(210./temp)*0.25; {&3037}
<G4164>  NCO      + O2       = RRG4164 +  CO2 + NO           : {%TrGN} 7.E-15; {&3198} // Upper limit. Dominant pathway under atmospheric conditions.
{<G5nnn> ------------------------------- F -------------------------}{@\myhline}
{<G6nnn> ------------------------------- Cl ------------------------}{@\myhline}
{<G7nnn> ------------------------------- Br ------------------------}{@\myhline}
{<G8nnn> ------------------------------- I -------------------------}{@\myhline}
{<G9nnn> ------------------------------- S -------------------------}{@\myhline}
{<G10nnn> ------------------------------- Hg ------------------------}{@\myhline}
{<J0nnn> ------------------------------- e* ------------------------}{@\myhline}
{<J1nnn> ------------------------------- O -------------------------}{@\myhline}
<J1000a> O2      + hv = RRJ1000a +  O3P + O3P             : {%UpStTrGJ} jx(ip_O2); {&2342}
<J1001a> O3      + hv = RRJ1001a +  O1D + O2              : {%UpStTrGJ} jx(ip_O1D); {&2342}
<J1001b> O3      + hv = RRJ1001b +  O3P + O2              : {%UpStTrGJ} jx(ip_O3P); {&2342}
{<J2nnn> ------------------------------- H -------------------------}{@\myhline}
<J2101>  H2O2    + hv = RRJ2101 +  2 OH       : {%UpStTrGJ} jx(ip_H2O2); {&2342}
{<J3nnn> ------------------------------- N -------------------------}{@\myhline}
<J3101>  NO2     + hv = RRJ3101 +  NO + O3P   : {%UpStTrGJN}  jx(ip_NO2); {&2342}
<J3103a> NO3     + hv = RRJ3103a +  NO2 + O3P  : {%UpStTrGJN}  jx(ip_NO2O); {&2342}
<J3103b> NO3     + hv = RRJ3103b +  NO  + O2   : {%UpStTrGJN}  jx(ip_NOO2); {&2342}
<J3104>  N2O5    + hv = RRJ3104 +  NO2 + NO3  : {%StTrGJN}    jx(ip_N2O5); {&2342}
<J3200>  HONO    + hv = RRJ3200 +  NO + OH    : {%TrGJN} jx(ip_HONO); {&2342}
<J3201>  HNO3    + hv = RRJ3201 +  NO2 + OH   : {%StTrGJN} jx(ip_HNO3); {&2342}
<J3202>  HNO4    + hv = RRJ3202 +  .667 NO2 + .667 HO2 + .333 NO3 + .333 OH : {%StTrGJN} jx(ip_HNO4); {&2342}
{<J4nnn> ------------------------------- C -------------------------}{@\myhline}
<J41000>  CH3OOH      + hv = RRJ41000 +  CH3O + OH                  : {%StTrGJ} jx(ip_CH3OOH); {&2342}
<J41001a> HCHO        + hv = RRJ41001a +  H2 + CO                    : {%StTrGJ} jx(ip_COH2); {&2342}
<J41001b> HCHO        + hv = RRJ41001b +  H + CO + HO2               : {%StTrGJ} jx(ip_CHOH); {&2342}
<J41004>  CH3ONO      + hv = RRJ41004 +  CH3O + NO                  : {%StTrGJN} jx(ip_CH3ONO); {&2342}
<J41005>  CH3NO3      + hv = RRJ41005 +  CH3O + NO2                 : {%StTrGJN} jx(ip_CH3NO3); {&2342}
<J41006>  CH3O2NO2    + hv = RRJ41006 +  .667 NO2 + .667 CH3O2 + .333 NO3 + .333 CH3O : {%StTrGJN} jx(ip_CH3O2NO2); {&2342} // product distribution as for HNO4
<J41007>  HOCH2OOH    + hv = RRJ41007 +  HCOOH + OH + HO2           : {%StTrGJ} jx(ip_CH3OOH); {&2342}
<J41008>  CH3O2       + hv = RRJ41008 +  HCHO + OH                  : {%StTrGJ} jx(ip_CH3O2); {&2342}
<J41009>  HCOOH       + hv = RRJ41009 +  CO + HO2 + OH              : {%StTrGJ} jx(ip_HCOOH); {&2342}
<J41010>  HOCH2O2NO2  + hv = RRJ41010 +  .667 NO2 + .667 HOCH2O2 + .333 NO3 + .333 HCOOH + .333 HO2 : {%StTrGJN} jx(ip_CH3O2NO2); {&2342}
{<J5nnn> ------------------------------- F -------------------------}{@\myhline}
{<J6nnn> ------------------------------- Cl ------------------------}{@\myhline}
{<J7nnn> ------------------------------- Br ------------------------}{@\myhline}
{<J8nnn> ------------------------------- I -------------------------}{@\myhline}
{<J9nnn> ------------------------------- S -------------------------}{@\myhline}
{<HETnnn> ------------------------------ HET ------------------------}{@\myhline}
{***** END:   gas-phase chemistry from gas.eqn *****}
#INLINE F90_GLOBAL
  ! from xmecca:
  LOGICAL, PARAMETER :: REQ_HET     = .FALSE.
  LOGICAL, PARAMETER :: REQ_PHOTRAT = .TRUE.
  LOGICAL, PARAMETER :: REQ_AEROSOL = .FALSE.
#ENDINLINE {above lines go to messy_mecca_kpp_global}
#INLINE F90_GLOBAL
  ! from xmecca:
  INTEGER, PARAMETER, PUBLIC :: MAX_MCEXP = 1
!KPPPP_DIRECTIVE vector variable definition start
  REAL :: mcexp(MAX_MCEXP) ! dummy Monte-Carlo factor
!KPPPP_DIRECTIVE vector variable definition end
#ENDINLINE {above lines go to messy_mecca_kpp_global}
