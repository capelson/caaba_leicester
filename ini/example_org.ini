# Time-stamp: <2021-03-29 20:03:17 sander>
# example config file for xcaaba.py
# https://docs.python.org/3.6/library/configparser.html
# Author: Rolf Sander, 2020-...

##############################################################################

[DEFAULT]

##############################################################################

[xcaaba]

# MECCA config (*.ini) file:
meccainifile = mbl

# compile?
# s: Start from scratch ("gmake clean", then compile)
# c: Compile recently changed files with "gmake"
# r: Run existing executable (not possible if batfile is given)
compile = c

# namelist file:
#nmlfile = caaba_simple.nml   # simple model run
nmlfile = caaba_mbl.nml      # mbl = marine boundary layer
#nmlfile = caaba_mcfct.nml    # Monte-Carlo factors
#nmlfile = caaba_mom.nml      # MOM = Mainz organic mechanism

# start Monte-Carlo run?
# (if l_montecarlo = True, then runcaaba, multirun_ncfile, outputdir and
# l_caabaplot are not needed)
l_montecarlo = False

# runcaaba?
# y: yes, run caaba.exe
# m: multirun
runcaaba = y

# netcdf file for multirun:
# (only necessary if runcaaba = m)
# multirun_ncfile = example_small.nc

# define the output directory which will be a subdirectory of output/
# (default = %Y-%m-%d-%H:%M:%S):
outputdir = testdir001

# to plot results, set l_caabaplot=True and define a [caabaplot] section below
l_caabaplot = True

##############################################################################

[caabaplot]

# list of model runs to plot
# activate one or more lines
# [directory,plottitle] for each model run in python syntax:
modelruns = [
    ['.',                                  'latest run'],
    # for radjimt:
    # ['output/radjimt-00',                  'equator'],
    # ['output/radjimt-50',                  '50 degree N'],
    # different mechanisms:
    # ['output/mom',                         'mom'],
    # ['output/mozart',                      'mozart'],
    # ['output/cb05bascoe',                  'cb05bascoe'],
    # ['output/mcm',                         'mcm'],
    # ['output/jam',                         'jam'],
    # other:
    # ['output/new',                         'new'],
    # ['output/old',                         'old'],
    # Monte-Carlo:
    # ['output/montecarlo/latest/runs/0001', '0001'],
    # ['output/montecarlo/latest/runs/0002', '0002'],
    # ['output/montecarlo/latest/runs/0003', '0003'],
    # ['output/montecarlo/latest/runs/0004', '0004'],
    # ['output/montecarlo/latest/runs/0005', '0005'],
    ]

# time format for plots (https://docs.python.org/3.6/library/datetime.html):
# show time of day as %H:%M:%S:
#mytimeformat = '%-Hh'

# csv list of species to plot:
plotspecies = O3, H2O2, NO, NO2, NOx, CH4, C2H2, HO12CO3C4, APINENE, BrO, DMS, SO2
# use asterisk to plot all species:
# plotspecies = *

# csv list of j-values to plot:
# plotjvals = *
plotjvals = J_O2, J_O3P, J_O1D, J_H2O2, J_NO2,
    J_NO2O, J_NOO2, J_N2O5, J_HNO3, J_HNO4, J_PAN, J_HONO
# use asterisk to plot all j-values:
# plotjvals = *

# csv list of reactions to plot:
plotrxns = G1000, G1001, G2100
# use asterisk to plot all reactions:
# plotrxns = *

# csv list of species for which to plot the budget (their scaled rxn rates):
plotbudget = O3, H2O2, NO
# use asterisk to plot the budgets of all species:
# plotbudget = *

##############################################################################
